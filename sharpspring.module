<?php
/**
 * @file
 * Drupal Module: SharpSpring.
 *
 * Adds the required Javascript to all your Drupal pages to allow tracking by
 * the SharpSpring statistics package.
 *
 * @author: rgkimball
 */

/**
 * Implements hook_permission().
 */
function sharpspring_permission() {
  return array(
    'administer sharpspring' => array(
      'title' => t('Administer SharpSpring'),
      'description' => t('Configure SharpSpring module settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function sharpspring_menu() {
  $items['admin/config/system/sharpspring'] = array(
    'title' => 'SharpSpring',
    'description' => 'Configure tracking behavior to get insights into your website traffic and marketing effectiveness.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sharpspring_admin_config_form'),
    'access arguments' => array('administer sharpspring'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'sharpspring.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_page_alter().
 *
 * Used to insert JavaScript to the appropriate scope/region of the page.
 */
function sharpspring_page_alter(&$page) {

  $id = variable_get('sharpspring_account');
  $domain = variable_get('sharpspring_domain');

  // 1. Check if the SS account number and domain have valid values.
  // 2. Create and insert js.
  if (_sharpspring_validate_id($id) && _sharpspring_validate_domain($domain)) {

    $pagejs = 'var _ss = _ss || []; ';
    $pagejs .= "_ss.push(['_setDomain', 'https://" . $domain . "/net']); ";
    $pagejs .= "_ss.push(['_setAccount', '" . $id . "']); ";
    $pagejs .= "_ss.push(['_trackPageView']); ";
    $pagejs .= "(function() { ";
    $pagejs .= "var ss = document.createElement('script'); ";
    $pagejs .= "ss.type = 'text/javascript'; ss.async = true; ";
    $pagejs .= "ss.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + '" . $domain . "/client/ss.js?ver=1.1.1'; ";
    $pagejs .= "var scr = document.getElementsByTagName('script')[0]; ";
    $pagejs .= "scr.parentNode.insertBefore(ss, scr); ";
    $pagejs .= "})(); ";

    // Add compiled tracking code.
    drupal_add_js($pagejs, array('scope' => 'header', 'type' => 'inline'));
  }
}

/**
 * Implements hook_node_view().
 *
 * Used to add webform tracking codes.
 */
function sharpspring_preprocess_page(&$variables) {
  if (isset($variables['node']->type) && $variables['node']->type == 'webform') {
    $result_check = db_select('sharpspring', 'nid')
      ->fields('nid')
      ->condition('nid', $variables['node']->vid, '=')
      ->condition('status', 1)
      ->execute();

    // If there's any results, check t.
    $formjs = '';
    foreach ($result_check as $result) {
      $formjs .= "__ss_noform.push(['baseURI', '" . $result->base_uri . "']);";
      $formjs .= "__ss_noform.push(['endpoint', '" . $result->endpoint . "']);";
    }
    // If we've added anything to our script var, load the dependent script.
    if (!empty($formjs)) {
      $noform = "https://" . variable_get('sharpspring_domain') . "/client/noform.js?ver=1.0";
      $formjs = "var __ss_noform = __ss_noform || [];" . $formjs;

      drupal_add_js($formjs, array(
        'scope' => 'footer',
        'preprocessed' => FALSE,
        'type' => 'inline',
        'weight' => 2));
      drupal_add_js($noform, array(
        'scope' => 'footer',
        'preprocessed' => FALSE,
        'weight' => 3));
    }
  }
}

/**
 * Helper to validate a SharpSpring Web Property ID's format w/ regex.
 *
 * @param string $id
 *   The value of the property ID.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_id($id) {
  // String begins with KOI-, and ends with 6+ word characters(a-z, 0-9 or _).
  return preg_match('/^KOI-\w{6,}\z/', $id);
}

/**
 * Helper to validate a SharpSpring domain format w/ regex.
 *
 * @param string $input
 *   The value of the API domain.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_domain($input) {
  // String begins with koi-, has a 5+ identifier, & ends with sharpspring.com.
  return preg_match('/^koi-\w{5,}.sharpspring.com\z/i', $input);
}

/**
 * Helper to validate a SharpSpring base URI format w/ regex.
 *
 * @param string $input
 *   The value of the form's base URI.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_uri($input) {
  // String follows format:
  // https://app-XXXXXX.sharpspring.com/webforms/receivePostback/XXXXXXXX/.
  return preg_match('/^https:\/\/app-\w{5,}.sharpspring.com\/webforms\/receivePostback\/\w{6,}/i', $input);
}

/**
 * Helper to validate a SharpSpring endpoint w/ regex.
 *
 * @param string $input
 *   The value of the form's endpoint value.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_endpoint($input) {
  // String follows format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.
  return preg_match('/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\z/', $input);
}
