<?php
/**
 * @file
 * Drupal Module: SharpSpring.
 *
 * Adds the required Javascript to all your Drupal pages to allow tracking by
 * the SharpSpring statistics package.
 */

/**
 * Implements hook_permission().
 */
function sharpspring_permission() {
  return array(
    'administer sharpspring' => array(
      'title' => t('Administer SharpSpring'),
      'description' => t('Configure SharpSpring module settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function sharpspring_menu() {
  $items['admin/config/system/sharpspring'] = array(
    'title' => 'SharpSpring',
    'description' => 'Configure tracking behavior to get insights into your website traffic and marketing effectiveness.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sharpspring_admin_config_form'),
    'access arguments' => array('administer sharpspring'),
    'file' => 'sharpspring.admin.inc',
  );

  $items['admin/config/system/sharpspring/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  return $items;
}

/**
 * Implements hook_page_build().
 *
 * Used to insert JavaScript to the appropriate scope/region of the page.
 */
function sharpspring_page_build(&$page) {

  $id = variable_get('sharpspring_account');
  $domain = variable_get('sharpspring_domain');

  // 1. Check if the SS account number and domain have valid values.
  // 1a. Do not add JS to admin pages.
  // 2. Create and insert js.
  if (_sharpspring_validate_id($id) && _sharpspring_validate_domain($domain) && !path_is_admin(current_path())) {

    // Add the sharpspring custom segmentation field value.
    $segment_field = variable_get('sharpspring_segment_field');

    // Add javascript to handle Sharpspring callback.
    $path = drupal_get_path('module', 'sharpspring');
    $page['page_top']['#attached']['js'][] = array(
      'data' => array(
        'sharpspring' => array(
          'domain' => $domain,
          'id' => $id,
          'segmentationField' => $segment_field,
        )),
      'type' => 'setting',
    );
    $page['page_top']['#attached']['js'][] = $path . '/js/drupal_sharpspring.js';

  }
}

/**
 * Helper to validate a SharpSpring Web Property ID's format w/ regex.
 *
 * @param string $id
 *   The value of the property ID.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_id($id) {
  // String begins with KOI-, and ends with 6+ word characters(a-z, 0-9 or _).
  return preg_match('/^KOI-\w{6,}\z/', $id);
}

/**
 * Helper to validate a SharpSpring domain format w/ regex.
 *
 * @param string $input
 *   The value of the API domain.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_domain($input) {
  // String begins with koi-, has a 5+ identifier, & ends with sharpspring.com.
  return preg_match('/^koi-\w{5,}.sharpspring.com\z/i', $input);
}

/**
 * Helper to validate a SharpSpring base URI format w/ regex.
 *
 * @param string $input
 *   The value of the form's base URI.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_uri($input) {
  // String follows format:
  // https://app-XXXXXX.sharpspring.com/webforms/receivePostback/XXXXXXXX/.
  return preg_match('/^https:\/\/app-\w{5,}.sharpspring.com\/webforms\/receivePostback\/\w{6,}/i', $input);
}

/**
 * Helper to validate a SharpSpring endpoint w/ regex.
 *
 * @param string $input
 *   The value of the form's endpoint value.
 *
 * @return bool
 *   Verify that input matches format.
 */
function _sharpspring_validate_endpoint($input) {
  // String follows format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.
  return preg_match('/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\z/', $input);
}
