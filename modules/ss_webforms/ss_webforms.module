<?php
/**
 * @file
 * Drupal Module: SharpSpring Webforms.
 *
 * Integrates webforms with the SharpSpring module.
 */

/**
 * Implements hook_menu().
 */
function ss_webforms_menu() {
  $items['admin/config/system/sharpspring/webforms'] = array(
    'title' => 'Webforms',
    'description' => 'Configure SharpSpring Webform tracking.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ss_webforms_config_form'),
    'access arguments' => array('administer sharpspring'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 *
 * Adds sharpspring tracking javascript to selected webforms.
 */
function ss_webforms_form_alter(&$form, &$form_state, $form_id) {

  // From webform.module to determine if the form is a webform.
  if (strpos($form_id, 'webform_client_form_') === 0) {

    $has_added_form_js = &drupal_static('ss_webform_has_added_js');

    // Grab the webform id.
    $webform_id = str_replace('webform_client_form_', '', $form_id);

    if (!empty($webform_id)) {
      $result_check = db_select('sharpspring_webforms', 'sw')
        ->fields('sw')
        ->condition('nid', $webform_id, '=')
        ->condition('status', 1)
        ->execute()
        ->fetchAll();

      if (empty($has_added_form_js)) {
        // We haven't added the sharpspring form js to the footer yet.
        $noform = "https://" . variable_get('sharpspring_domain') . "/client/noform.js?ver=1.0";
        drupal_add_js($noform, array(
          'scope' => 'footer',
          'preprocessed' => FALSE,
          'type' => 'external',
          'weight' => 3));

        $has_added_form_js = TRUE;
      }

      foreach ($result_check as $result) {
        // Add js for each webform identified on the sharpspring config page.
        if (!empty($result->base_uri) && !empty($result->endpoint) && !empty($result->nid)) {
          $formjs = '<script type="text/javascript">';
          $formjs .= "var __ss_noform = __ss_noform || [];";
          $formjs .= "__ss_noform.push(['baseURI', '" . $result->base_uri . "']);";
          $formjs .= "__ss_noform.push(['endpoint', '" . $result->endpoint . "']);";
          // Target the specific webform form by #id.
          $formjs .= "__ss_noform.push(['form', 'webform-client-form-" . $result->nid . "']);";
          $formjs .= '</script>';

          $form['#suffix'] = $formjs;
        }

      }

    }

  }

}

/**
 * Defines the SharpSpring Webform configuration form.
 *
 * @param array $form
 *   An array defining the form.
 * @param array $form_state
 *   An array defining the current state of the form.
 */
function ss_webforms_config_form($form, &$form_state) {
  $form['tracking']['webforms'] = array(
    '#title' => t('Webform Lead Generation'),
    '#description' => t("<p>Add unique tracking IDs to each webform on the site. For each webform you want to track, enter the form's endpoint ID as it appears in the unique tracking code. It should be formatted like xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (8-4-4-4-12).</p>"),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
  );

  // Get list of all webforms.
  $wf_query = db_select('webform', 'nid')
    ->fields('nid')
    ->orderBy('nid', 'ASC')
    ->execute();

  // Get list of all SharpSpring form endpoints.
  if (db_table_exists('sharpspring_webforms')) {
    $ss_query = db_select('sharpspring_webforms', 'nid')
      ->fields('nid')
      ->orderBy('nid', 'ASC')
      ->execute();

    $webform_codes = array();
    foreach ($ss_query as $row) {
      $webform_codes[$row->nid] = $row;
    }

  }
  else {
    drupal_set_message(t('SharpSpring Webforms DB Table does not exist. Please disable and re-enable the module before using webform components.'), 'error');
    exit();
  }

  $forms_count = 0;
  foreach ($wf_query as $row) {
    $forms_count++;
    $webform = node_load($row->nid);

    $unpublished = (isset($webform->status)) ? !$webform->status : TRUE;

    $enabled = (isset($webform_codes[$row->nid])) ? $webform_codes[$row->nid]->status : 0;
    $endpoint = (isset($webform_codes[$row->nid])) ? $webform_codes[$row->nid]->endpoint : '';
    $base_uri = (isset($webform_codes[$row->nid])) ? $webform_codes[$row->nid]->base_uri : '';

    $form['tracking']['webforms']['enable'][$row->nid] = array(
      '#title' => l($webform->title, 'node/' . $row->nid),
      '#default_value' => $enabled,
      // Disable checkbox if form is unpublished.
      '#disabled' => $unpublished,
      '#type' => 'checkbox',
      '#size' => 50,
      '#maxlength' => 40,
    );

    $form['tracking']['webforms'][$row->nid] = array(
      '#type' => 'fieldset',
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
      '#states' => array(
        'visible' => array(
          ':input[name="' . $row->nid . '"]' => array('checked' => TRUE),
        ),
      ),
    );

    $form['tracking']['webforms'][$row->nid]['header'] = array(
      '#markup' => '<h4 style="margin-top: -10px;">"' . $webform->title . '" Form</h4>',
    );

    $form['tracking']['webforms'][$row->nid]['base_uri_' . $row->nid] = array(
      '#title' => 'Base URI',
      '#description' => t("The form's baseURI will appear in the tracking code as: <pre>__ss_noform.push(['baseURI', '<strong>https://app-XXXXXX.sharpspring.com/webforms/receivePostback/XXXXXXXX/</strong>']);</pre>"),
      '#default_value' => $base_uri,
      '#type' => 'textfield',
      '#size' => 50,
      '#maxlength' => 255,
    );

    $form['tracking']['webforms'][$row->nid]['endpoint_' . $row->nid] = array(
      '#title' => 'Endpoint',
      '#description' => t("The form's endpoint will appear in the tracking code as: <pre>__ss_noform.push(['endpoint', '<strong>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</strong>']);</pre>"),
      '#default_value' => $endpoint,
      '#type' => 'textfield',
      '#size' => 70,
      '#maxlength' => 40,
    );

  }

  $title = (isset($webform->title)) ? $webform->title : '';

  $form['tracking']['webforms']['count'] = array(
    '#title' => $title,
    '#type' => 'hidden',
    '#default_value' => $forms_count,
  );

  $form['#submit'][] = 'ss_webforms_config_form_submit';
  return system_settings_form($form);
}

/**
 * SharpSpring Webform admin form validation.
 *
 * @param array $form
 *   An array defining the form.
 * @param array $form_state
 *   An array defining the current state of the form.
 */
function ss_webforms_config_form_validate(&$form, &$form_state) {
  // Only get numeric array keys within webforms group (i.e. webform nids).
  $keys = array_filter(array_keys($form['tracking']['webforms']), 'is_int');

  foreach ($keys as $wid) {

    $status = $form['tracking']['webforms']['enable'][$wid]['#value'];
    $base_uri = $form['tracking']['webforms'][$wid]['base_uri_' . $wid]['#value'];
    $endpoint = $form['tracking']['webforms'][$wid]['endpoint_' . $wid]['#value'];

    // If the form tracking isn't active, it doesn't matter if these are wrong.
    if ($status == 1) {
      // Check whether the base URI and endpoint will actually work.
      if (!_sharpspring_validate_endpoint($endpoint)) {
        form_set_error('endpoint_' . $wid, t('A valid SharpSpring Endpoint is formatted like xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. Please check for any whitespace in your entry.'));
        continue;
      }
      if (!_sharpspring_validate_uri($base_uri)) {
        form_set_error('base_uri_' . $wid, t('A valid SharpSpring Base URI is formatted like https://app-XXXXXX.sharpspring.com/webforms/receivePostback/XXXXXXXX.'));
        continue;
      }
    }
  }
}

/**
 * SharpSpring Webform admin form submit.
 *
 * @param array $form
 *   An array defining the form.
 * @param array $form_state
 *   An array defining the current state of the form.
 */
function ss_webforms_config_form_submit(&$form, &$form_state) {
  // Only get numeric array keys within webforms group (i.e. webform nids).
  $keys = array_filter(array_keys($form['tracking']['webforms']), 'is_int');

  foreach ($keys as $wid) {

    $status = $form['tracking']['webforms']['enable'][$wid]['#value'];
    $base_uri = $form['tracking']['webforms'][$wid]['base_uri_' . $wid]['#value'];
    $endpoint = $form['tracking']['webforms'][$wid]['endpoint_' . $wid]['#value'];

    $result_check = db_select('sharpspring_webforms', 'nid')
      ->fields('nid')
      ->condition('nid', $wid, '=')
      ->execute();

    // If there's any results, delete them.
    foreach ($result_check as $result) {
      if (!empty($result)) {
        db_delete('sharpspring_webforms')
          ->condition('nid', $wid, '=')
          ->execute();
      }
    }

    // Now save new info.
    $db_name = 'sharpspring_webforms';
    $data = array(
      'nid' => check_plain($wid),
      'base_uri' => check_plain($base_uri),
      'endpoint' => check_plain($endpoint),
      'status' => check_plain($status),
    );

    drupal_write_record($db_name, $data);

    $webform = node_load($wid);
    if ($status == 1) {
      drupal_set_message(t('Successfully saved data for @title form', array('@title' => $webform->title)));
    }
  }
}
