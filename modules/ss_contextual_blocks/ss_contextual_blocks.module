<?php
/**
 * @file
 * Drupal Module: SharpSpring Contextual Blocks.
 *
 * Provides contextual content blocks that respond
 * to SharpSpring lead or contact fields.
 *
 * @author: mojiferous
 */

/**
 * Implements hook_menu().
 */
function ss_contextual_blocks_menu() {
  $items['admin/config/system/sharpspring/blocks'] = array(
    'title' => 'Contextual Blocks',
    'description' => 'Configure SharpSpring contextual content blocks.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ss_contextual_blocks_config_form'),
    'access arguments' => array('administer sharpspring'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  $items['admin/content/add_ss_block'] = array(
    'title' => 'Add SharpSpring Block',
    'description' => 'Add a SharpSpring contextual block.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ss_contextual_blocks_add_block_form'),
    'access arguments' => array('administer sharpspring'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Defines the block config form.
 *
 * @param array $form
 *   An array containing form values
 * @param array $form_state
 *   An array containing current form state values
 *
 * @return array
 *   The final form array
 */
function ss_contextual_blocks_config_form($form, &$form_state) {
  // Replace Windows line endings.
  $raw_segments = str_replace("\n\r", "\n", variable_get('sharpspring_segment_values'));
  $segments = explode("\n", $raw_segments);

  $ss_blocks = _ss_contextual_blocks_return_all_blocks();

  // Get a list of all active blocks.
  global $theme;
  $blocks = db_select('block', 'b')
    ->fields('b', array('bid', 'delta'))
    ->condition('theme', $theme)
    ->execute()
    ->fetchAllKeyed();

  foreach ($ss_blocks as $bid => $block_name) {
    $form['ss_block_' . $bid] = array(
      '#type' => 'fieldset',
      '#title' => $block_name,
    );

    $n = 0;
    foreach ($segments as $segment) {
      $form['ss_block_' . $bid]['segment_' . $bid . ';' . $n] = array(
        '#type' => 'select',
        '#title' => $segment,
        '#options' => $blocks,
        '#empty_value' => '',
        '#default_value' => 0,
      );

      $n++;
    }

  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Submit handler for the contextual blocks config form.
 *
 * @param array $form
 *   An array that defines the form.
 * @param array $form_state
 *   An array of values for the form.
 */
function ss_contextual_blocks_config_form_submit($form, &$form_state) {
  $input_vals = (!empty($form_state['input'])) ? $form_state['input'] : array();

}

/**
 * Provides the Add SharpSpring Block form.
 *
 * @param array $form
 *   An array of from values.
 * @param array $form_state
 *   An array representing the current form state.
 *
 * @return array
 *   Returns form array.
 */
function ss_contextual_blocks_add_block_form($form, &$form_state) {
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add Block'),
  );

  return $form;
}

/**
 * Submit handler for the add block form.
 *
 * @param array $form
 *   An array representing the current form.
 * @param array $form_state
 *   An array representing the current form contents.
 *
 * @throws \Exception
 */
function ss_contextual_blocks_add_block_form_submit($form, &$form_state) {
  if (!empty($form_state['input']['title'])) {
    $title = $form_state['input']['title'];

    $new_bid = db_insert('sharpspring_contextual_blocks')
      ->fields(array(
        'name' => $title,
      ))
      ->execute();

    drupal_set_message('SharpSpring Contextual Block "' . $title . '" Added.');
  }
  else {
    drupal_set_message('Unable to add SharpSpring Block, no title found.');
    watchdog('SharpSpring Blocks', 'Unable to add SharpSpring block, no title passed to form submit.', array(), WATCHDOG_ERROR);
  }
}

/**
 * Helper function to return all SS Contextual Blocks keyed by block id.
 *
 * @return array
 *   Returns array keyed by block id, values are block names.
 */
function _ss_contextual_blocks_return_all_blocks() {
  $ss_blocks = db_select('sharpspring_contextual_blocks', 'scb')
    ->fields('scb')
    ->execute()
    ->fetchAllKeyed();

  return $ss_blocks;
}
